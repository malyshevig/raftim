// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "IM",
            "email": "ilia.malishev@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/client/command": {
            "post": {
                "description": "Responds with the list of all books as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Client Command",
                "parameters": [
                    {
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string",
                        "description": "string valid",
                        "name": "cmd",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/node/{id}/state/{value}": {
            "post": {
                "description": "Responds with the list of all books as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "node"
                ],
                "summary": "Change state of Node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New State",
                        "name": "value",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/node/{id}/status/{value}": {
            "post": {
                "description": "Responds with the list of all books as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "node"
                ],
                "summary": "Change state of Node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New Status",
                        "name": "value",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/nodes": {
            "get": {
                "description": "Responds with the list of all books as JSON.",
                "tags": [
                    "nodes"
                ],
                "summary": "Get books array",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/raft.RestNode"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "raft.RestNode": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "leader": {
                    "type": "integer"
                },
                "log": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "term": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:1000",
	BasePath:         "/raft",
	Schemes:          []string{},
	Title:            "Raft Example",
	Description:      "Raft just for fun implementation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
